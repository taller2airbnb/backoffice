{"version":3,"sources":["communication/responses/Response.js","communication/responses/generalResponses/ErrorApiResponse.js","communication/responses/generalResponses/SuccessfulApiResponse.js","communication/endpoints/Endpoint.js","communication/responses/profiles/GetProfileSuccessful.js","communication/endpoints/GetProfileEndpoint.js","communication/responses/login/LoginSuccessful.js","communication/responses/login/InvalidCredentials.js","communication/endpoints/LoginEndpoint.js","communication/responses/register/RegistrationSuccessful.js","communication/endpoints/RegisterEndpoint.js","communication/client/ApiClient.js","settings.js","communication/requester/Requester.js","communication/mocks/fakeRequesterExpectedResponses.js","communication/requester/FakeRequester.js","communication/requester/RemoteRequester.js","app/app.js","components/Navigator.jsx","components/Header.jsx","components/Paperbase.jsx","components/Register.jsx","controllers/Home.js","controllers/Other.js","components/Pepe.js","controllers/Profile.js","communication/Request.js","communication/endpoints/EndpointList.js","components/Transactions.jsx","controllers/Transactions.js","controllers/Login.js","components/UserList.jsx","controllers/Users.js","components/HealthTest.jsx","controllers/HealthCheck.jsx","routes/PrivateRoute.js","components/Postings.jsx","controllers/Postings.js","components/Servers.jsx","controllers/Servers.js","components/Covid.jsx","controllers/Covid.js","routes/Routes.js","serviceWorker.js","index.js","assets/img/logo.svg"],"names":["ApiResponse","jsonResponse","this","_jsonResponse","Error","undefined","error","ErrorApiResponse","errors","errorMessages","SuccessfulApiResponse","Endpoint","ownResponses","concat","generalResponses","constructor","url","GetProfileSuccessful","personalData","content","id","email","firstName","lastName","avatarUrl","GetProfileEndpoint","LoginSuccessful","InvalidCredentials","LoginEndpoint","RegistrationSuccessful","RegisterEndpoint","ApiClient","requester","onServerErrorDo","_requester","_handleServerError","_handleResponse","bind","response","onResponse","status","console","log","data","call","endpoint","getSetting","variableName","variableFullName","process","Requester","fakeRequesterExpectedResponses","name","FakeRequester","expectedResponses","_expectedResponses","expectedResponseType","defaultResponse","endpointResponse","setTimeout","RemoteRequester","_baseUrl","request","_buildRequest","method","_dataToQueryString","fetch","then","result","json","_buildResponse","catch","exception","headers","_buildHeadersFor","requestOptions","encoder","_encoderFor","contentType","Object","assign","body","encode","availableResponsesForEndpoint","responses","responseType","understandThis","keyValuePairs","i","keys","length","key","value","values","push","encodeURIComponent","join","JsonEncoder","MultiPartEncoder","find","enc","accepts","Encoder","mimeType","requestBody","formData","FormData","field","append","files","forEach","file","JSON","stringify","app","_apiClient","_setUpApiClient","login","home","profile","transactions","healthcheck","other","userlist","postings","servers","covid","token","localStorage","setItem","getItem","_setUpRequester","remoteApiUrl","categories","children","icon","People","route","Money","Receipt","Computer","Report","withRouter","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","selectedRoute","history","Drawer","variant","List","disablePadding","ListItem","className","clsx","ListItemIcon","ListItemText","primary","map","Fragment","childId","button","onClick","Divider","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","padding","link","textDecoration","borderColor","header","onDrawerToggle","AppBar","component","position","elevation","Toolbar","Grid","container","alignItems","xs","Typography","Copyright","align","Link","href","Date","getFullYear","createMuiTheme","light","main","dark","typography","h5","fontWeight","letterSpacing","shape","borderRadius","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","paper","MuiButton","label","textTransform","contained","MuiTabs","root","indicator","height","borderTopLeftRadius","borderTopRightRadius","margin","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","width","styles","display","drawer","flexShrink","flex","flexDirection","background","footer","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","ThemeProvider","CssBaseline","Hidden","smUp","implementation","PaperProps","style","open","onClose","xsDown","useStyles","makeStyles","avatar","secondary","form","submit","SignUp","changeHandler","e","handleInputChange","Container","maxWidth","noValidate","sm","TextField","autoComplete","required","fullWidth","autoFocus","onChange","type","errorMessage","Button","handleSubmit","Register","state","password","first_name","last_name","national_id_type","national_id","alias","handleApiResponse","setState","event","input","target","hasError","alert","apiClient","register","Component","overflow","searchBar","borderBottom","searchInput","block","addUser","contentWrapper","Home","Other","Pepe","nombre","Profile","userData","getUserData","userPersonalData","getProfile","getRequestOptions","bearerToken","get","a","put","get_profile","put_profile","post_profile","userListEndpoint","covidEndpoint","apikeysEndpoint","TransactionList","loading","loadTransactions","transactionList","message","sort","b","creation_date","transaction","TableRow","TableCell","name_posting","first_name_booker","last_name_booker","first_name_owner","last_name_owner","operation","payment","formatDateAndTime","date_string","date","splitDate","day","month","year","time","substring","TableContainer","Paper","Table","size","aria-label","TableHead","TableBody","listATransaction","Transactions","SignIn","Avatar","Box","mt","Login","google_token","user_type","loginUser","routes","UserList","user_list","reloadUserList","users","user","blockText","blockIcon","Cancel","blockColor","blocked","CheckCircle","marginBottom","setBlockStatus","user_id","new_status","listAUser","Users","HealthTest","getStatus","healthTestUrl","setInterval","prevProps","prevState","serverName","HealthCheck","PrivateRoute","rest","render","thereIsLoggedInUser","to","pathname","PostingsList","postings_list","reloadPostingsList","myList","id_posting","posting","publicIcon","public","deleted","location","x","y","getUserName","id_user","formatDate","start_date","end_date","city","country","max_number_guests","price_day","setBlockState","filter","posting_id","postingDisplay","Postings","ServerList","create","api_keys","new_key_name","onInputchange","onSubmitForm","addApiKey","reloadApiKeys","apikeys","api_key","activeIcon","active","name_from","api_key_token","setActiveState","apiKeysDisplay","disabled","serverTable","createServerForm","Servers","CovidSettings","allow","covidParams","updateParam","validateForm","param_name","newParams","str","check","isNaN","parseFloat","Number","reloadCovidParams","paramDict","displayNames","fatality_rate","fatality_rate_variation","jump_days","number_days_window_delta","threshold_slope_variation","total_jumps","display_name","param","generatePutBody","paramsToList","paramDisplay","setCovidParams","paramTable","submitButton","Covid","Routes","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4caa3edc.chunk.js","sourcesContent":["export class ApiResponse {\n    static understandThis(jsonResponse) {\n        throw new Error(\"You have to implement the method\");\n    }\n\n    constructor(jsonResponse) {\n        this._jsonResponse = jsonResponse;\n    }\n\n    hasError() {\n        return this._jsonResponse.error !== undefined && this._jsonResponse.error !== false;\n    }\n\n    errors() {\n        return this._jsonResponse.Error ?? this._jsonResponse.error;\n    }\n\n    content() {\n        return this._jsonResponse;\n    }\n}","import {ApiResponse} from \"../Response.js\"\n\nexport class ErrorApiResponse extends ApiResponse {\n    static defaultResponse() {\n        throw new Error(\"You have to implement the method\");\n    }\n\n    static errorCodes() {\n        throw new Error(\"You have to implement the method\");\n    }\n\n    static understandThis(jsonResponse) {\n        return (jsonResponse.error !== undefined || jsonResponse.Error !== undefined ) /* && this.errorCodes().includes(jsonResponse.error) */;\n    }\n\n    errorMessages() {\n        return this.errors();\n    }\n\n    description() {\n        return \"¡Ha ocurrido un error!\"\n    }\n\n    message() {\n        return this.errorMessages();\n    }\n}","import {ApiResponse} from \"../Response.js\"\n\nexport class SuccessfulApiResponse extends ApiResponse {\n    static defaultResponse() {\n        throw new Error(\"You have to implement the method\");\n    }\n\n    static understandThis(jsonResponse) {\n        return jsonResponse.error === undefined && jsonResponse.Error === undefined;\n    }\n}","import {SuccessfulApiResponse} from \"../responses/generalResponses/SuccessfulApiResponse.js\";\n\nexport class Endpoint {\n    static url() {\n        throw new Error(\"You have to implement the method\");\n    }\n\n    generalResponses() {\n        return [SuccessfulApiResponse]\n    }\n\n    ownResponses() {\n        /*\n            Override this in order to provide custom responses\n        \"*/\n        return []\n    }\n\n    responses() {\n        /*\n            Own responses have more precedence over the general responses\n        \"*/\n        return this.ownResponses().concat(this.generalResponses())\n    }\n\n    url() {\n        return this.constructor.url();\n    }\n\n    contentType() {\n        return 'application/json';\n    }\n\n    method() {\n        throw new Error(\"You have to implement the method\");\n    }\n\n    needsAuthorization() {\n        throw new Error(\"You have to implement the method\");\n    }\n}\n","import {SuccessfulApiResponse} from \"../generalResponses/SuccessfulApiResponse.js\";\n\nexport class GetProfileSuccessful extends SuccessfulApiResponse {\n    static defaultResponse() {\n        return {\n            \"data\": {\n                \"id\": 2,\n                \"email\": \"maria@gonzalez.com\",\n                \"first_name\": \"Maria\",\n                \"last_name\": \"Gonzalez\",\n                \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\"\n            },\n            \"ad\": {\n                \"company\": \"Google\",\n                \"url\": \"http://statuscode.org/\",\n                \"text\": \"A weekly newsletter focusing on software development, infrastructure, the server, performance, and the stack end of things.\"\n            }\n        }\n    }\n\n    userPersonalData() {\n        const personalData = this.content()['data'];\n        return {\n            id: personalData['id'],\n            email: personalData['email'],\n            firstName: personalData['first_name'],\n            lastName: personalData['last_name'],\n            avatarUrl: personalData['avatar'],\n        }\n    }\n}","import {Endpoint} from \"./Endpoint.js\";\nimport {GetProfileSuccessful} from \"../responses/profiles/GetProfileSuccessful.js\";\n\nexport class GetProfileEndpoint extends Endpoint {\n    static url() {\n        return '/users/2'\n    }\n\n    ownResponses() {\n        return [GetProfileSuccessful];\n    }\n\n    method() {\n        return 'GET'\n    }\n\n    needsAuthorization() {\n        return false;\n    }\n}","import {SuccessfulApiResponse} from \"../generalResponses/SuccessfulApiResponse.js\";\n\nexport class LoginSuccessful extends SuccessfulApiResponse {\n    static defaultResponse() {\n        return {\n            \"token\": \"QpwL5tke4Pnpja7X4\"\n        }\n    }\n}","import {ErrorApiResponse} from \"../generalResponses/ErrorApiResponse\";\n\nexport class InvalidCredentials extends ErrorApiResponse {\n    static defaultResponse() {\n        return {\n            \"error\": \"Missing password\"\n        }\n    }\n\n    static errorCodes() {\n        return [\"user not found\", \"Missing email or username\", \"Missing password\"]\n    }\n}","import {Endpoint} from \"./Endpoint.js\";\nimport {LoginSuccessful} from \"../responses/login/LoginSuccessful\";\nimport {InvalidCredentials} from \"../responses/login/InvalidCredentials\";\n\nexport class LoginEndpoint extends Endpoint {\n    static url() {\n        return '/login'\n    }\n\n    ownResponses() {\n        return [LoginSuccessful, InvalidCredentials];\n    }\n\n    method() {\n        return 'POST'\n    }\n\n    needsAuthorization() {\n        return false;\n    }\n}","import {SuccessfulApiResponse} from \"../generalResponses/SuccessfulApiResponse.js\";\n\nexport class RegistrationSuccessful extends SuccessfulApiResponse {\n    static defaultResponse() {\n        return {\n            \"message\": \"Account successfully created\"\n        }\n    }\n}","import {Endpoint} from \"./Endpoint.js\";\nimport {RegistrationSuccessful} from \"../responses/register/RegistrationSuccessful\";\n\nexport class RegisterEndpoint extends Endpoint {\n    static url() {\n        return '/register/'\n    }\n\n    ownResponses() {\n        return [RegistrationSuccessful];\n    }\n\n    method() {\n        return 'POST'\n    }\n\n    needsAuthorization() {\n        return false;\n    }\n}","import {ServerErrorResponse} from \"../responses/generalResponses/ServerErrorResponse.js\";\nimport {ErrorApiResponse} from \"../responses/generalResponses/ErrorApiResponse.js\";\nimport {GetProfileEndpoint} from \"../endpoints/GetProfileEndpoint.js\";\nimport {LoginEndpoint} from \"../endpoints/LoginEndpoint\";\nimport {RegisterEndpoint} from \"../endpoints/RegisterEndpoint\";\n\n\nclass ApiClient {\n    constructor(requester, onServerErrorDo = () => {\n    }) {\n        this._requester = requester;\n        this._handleServerError = onServerErrorDo;\n        this._handleResponse = this._handleResponse.bind(this);\n    }\n\n    _handleResponse(response, onResponse) {\n        if (response.status === 500) {\n            console.log(\"Server error: \", response);\n            return this._handleServerError(response);\n        }\n\n        return onResponse(response);\n    }\n\n    login(data, onResponse) {\n        return this._requester.call({\n            endpoint: new LoginEndpoint(),\n            onResponse: (response) => this._handleResponse(response, onResponse),\n            data: data\n        });\n    }\n\n    register(data, onResponse) {\n        return this._requester.call({\n            endpoint: new RegisterEndpoint(),\n            onResponse: (response) => this._handleResponse(response, onResponse),\n            data: data\n        });\n    }\n\n    getProfile(onResponse) {\n        return this._requester.call({\n            endpoint: new GetProfileEndpoint(),\n            onResponse: (response) => this._handleResponse(response, onResponse)\n        });\n    }\n}\n\nexport default ApiClient;","export function getSetting(variableName) {\n    const variablePrefix = 'REACT_APP_';\n    const variableFullName = variablePrefix + variableName;\n    \n    return process.env[variableFullName];\n}","export class Requester {\n    call({endpoint, onResponse, data = undefined}) {\n        throw new Error(\"You have to implement the method\");\n    }\n}\n","import {GetProfileEndpoint} from \"../endpoints/GetProfileEndpoint\";\nimport {GetProfileSuccessful} from \"../responses/profiles/GetProfileSuccessful\";\nimport {LoginEndpoint} from \"../endpoints/LoginEndpoint\";\nimport {RegisterEndpoint} from \"../endpoints/RegisterEndpoint\";\nimport {LoginSuccessful} from \"../responses/login/LoginSuccessful\";\nimport {RegistrationSuccessful} from \"../responses/register/RegistrationSuccessful\";\nimport {InvalidCredentials} from \"../responses/login/InvalidCredentials\";\n\n\nconst fakeRequesterExpectedResponses = () => {\n    return {\n        [GetProfileEndpoint.name]: GetProfileSuccessful,\n        [LoginEndpoint.name]: LoginSuccessful,\n        [RegisterEndpoint.name]: RegistrationSuccessful,\n    }\n};\n\nexport default fakeRequesterExpectedResponses;","import {Requester} from \"./Requester.js\";\nimport fakeRequesterExpectedResponses from \"../mocks/fakeRequesterExpectedResponses.js\";\n\nclass FakeRequester extends Requester {\n    constructor(expectedResponses) {\n        super();\n        this._expectedResponses = expectedResponses || fakeRequesterExpectedResponses();\n    }\n\n    call({endpoint, onResponse, data = undefined}) {\n        const expectedResponseType = this._expectedResponses[endpoint.constructor.name];\n        // TODO: Agregar response por defecto si no está definida en el diccionario\n        const jsonResponse = expectedResponseType.defaultResponse();\n        const endpointResponse = new expectedResponseType(jsonResponse);\n\n        setTimeout(() => onResponse(endpointResponse), 2500);\n    }\n}\n\nexport default FakeRequester;","import {Requester} from \"./Requester.js\";\nimport {ErrorApiResponse} from \"../responses/generalResponses/ErrorApiResponse.js\";\n\nclass RemoteRequester extends Requester {\n    constructor(url) {\n        super();\n        this._baseUrl = url;\n    }\n\n    call({endpoint, onResponse, data = undefined}) {\n        const request = this._buildRequest(endpoint, data);\n        let url = endpoint.url();\n        if (endpoint.method() === 'GET' && data) {\n            url += \"?\" + this._dataToQueryString(data);\n        }\n\n        return fetch(this._baseUrl + url, request).then(result => result.json())\n            .then(jsonResponse => {\n                return onResponse(this._buildResponse(jsonResponse, endpoint));\n            })\n            /***\n             * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Checking_that_the_fetch_was_successful\n             *\n             * A fetch() promise will reject with a TypeError when a network error is encountered or CORS is\n             * misconfigured on the server-side, although this usually means permission issues or similar —\n             * a 404 does not constitute a network error, for example.\n             *\n             ***/\n            .catch(exception => {\n                console.log(\"Exception in API request: \", exception);\n            })\n    }\n\n    _buildRequest(endpoint, data) {\n        let headers = this._buildHeadersFor(endpoint);\n        let requestOptions = {\n            method: endpoint.method(),\n            headers: headers\n        };\n\n        if (endpoint.method() !== 'GET') {\n            let encoder = this._encoderFor(endpoint.contentType());\n            Object.assign(headers, encoder.headers());\n            Object.assign(requestOptions, {body: encoder.encode(data)});\n        }\n        return requestOptions;\n    }\n\n    _buildResponse(jsonResponse, endpoint) {\n        let endpointResponse;\n\n        const availableResponsesForEndpoint = endpoint.responses();\n        for (let responseType of availableResponsesForEndpoint) {\n            if (responseType.understandThis(jsonResponse)) {\n                endpointResponse = new responseType(jsonResponse);\n                break;\n            } else {\n                endpointResponse = new ErrorApiResponse(jsonResponse);\n            }\n        }\n\n        return endpointResponse;\n    }\n\n    _buildHeadersFor(endpoint) {\n        let headers = {};\n        if (endpoint.contentType() && endpoint.contentType() !== \"multipart/form-data\") {\n            headers['Content-Type'] = endpoint.contentType();\n        }\n\n        return headers;\n    }\n\n    _dataToQueryString(data) {\n        let keyValuePairs = [];\n        for (let i = 0; i < Object.keys(data).length; i += 1) {\n            let key = Object.keys(data)[i];\n            let value = Object.values(data)[i];\n            if (value) {\n                keyValuePairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n            }\n        }\n        return keyValuePairs.join('&');\n    }\n\n    _encoderFor(contentType) {\n        let encoders = [new JsonEncoder(), new MultiPartEncoder()];\n        return encoders.find(enc => enc.accepts(contentType));\n    }\n}\n\nclass Encoder {\n    accepts(mimeType) {\n        throw new Error(\"You have to implement the method\");\n    }\n\n    headers() {\n        throw new Error(\"You have to implement the method\");\n    }\n\n    encode(requestBody) {\n        throw new Error(\"You have to implement the method\");\n    }\n}\n\nclass MultiPartEncoder extends Encoder {\n    accepts(mimeType) {\n        return mimeType === 'multipart/form-data'\n    }\n\n    headers() {\n        return {}\n    }\n\n    encode(requestBody) {\n        let formData = new FormData();\n\n        for (let field in requestBody) {\n            let value = requestBody[field];\n\n            if (value !== undefined) {\n                formData.append(field, value);\n            }\n        }\n\n        return formData;\n    }\n\n    _generateBodyFromFiles(files) {\n        let formData = new FormData();\n        Object.keys(files).forEach(key => {\n            const file = files[key];\n            formData.append(key, file);\n        });\n        return formData\n    }\n}\n\nclass JsonEncoder extends Encoder {\n    accepts(mimeType) {\n        return mimeType === 'application/json'\n    }\n\n    headers() {\n        return {'Content-Type': 'application/json'}\n    }\n\n    encode(requestBody) {\n        return JSON.stringify(requestBody);\n    }\n}\n\nexport default RemoteRequester;","import ApiClient from \"../communication/client/ApiClient\";\nimport {getSetting} from \"../settings\";\nimport FakeRequester from \"../communication/requester/FakeRequester\";\nimport RemoteRequester from \"../communication/requester/RemoteRequester\";\n\nclass App {\n    constructor() {\n        this._apiClient = undefined;\n    }\n\n    apiClient() {\n        if (this._apiClient === undefined) {\n            this._setUpApiClient();\n        }\n\n        return this._apiClient;\n    }\n\n    routes() {\n        return {\n            login: '/',\n            home: '/home',\n            profile: '/profile',\n            transactions: '/transactions',\n            healthcheck: '/healthcheck',\n            other: '/other',\n            userlist: '/userlist',\n            postings: '/postings',\n            servers: '/servers',\n            covid: '/covid',\n        }\n    }\n\n    loginUser(token) {\n        localStorage.setItem(\"token\", token);\n    }\n\n    thereIsLoggedInUser() {\n        return localStorage.getItem(\"token\");\n    }\n\n    _setUpApiClient() {\n        const requester = this._setUpRequester();\n        this._apiClient = new ApiClient(requester);\n    }\n\n    _setUpRequester() {\n        const usingFakeApi = getSetting(\"USING_FAKE_API\");\n        if (usingFakeApi) {\n            return new FakeRequester();\n        }\n\n        const remoteApiUrl = getSetting(\"API_URL\");\n        return new RemoteRequester(remoteApiUrl);\n    }\n}\n\nexport let app = new App();","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Receipt, People, Computer, Report, Money } from '@material-ui/icons';\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\n\nconst categories = [\n  {\n    id: 'Users',\n    children: [\n      { id: 'Create User', icon: <People />, route: 'home' },  \n      { id: 'User List', icon: <People />, route: 'userlist' },  \n      { id: 'Transactions', icon: <Money />, route: 'transactions' },  \n    ],\n  },\n  {\n    id: 'Postings',\n    children: [\n      { id: 'Postings', icon: <Receipt />, route: 'postings' },    \n    ],\n  },\n  {\n    id: 'Servers',\n    children: [\n      { id: 'Servers', icon: <Computer />, route: 'servers' },    \n    ],\n  },\n  {\n    id: 'Covid Warn',\n    children: [\n      { id: 'Covid Settings', icon: <Report />, route: 'covid' },    \n    ],\n  },\n  {\n    id: 'Quality',\n    children: [\n      { id: 'Analytics', icon: <SettingsIcon />, route: 'other' },    \n    ],\n  },\n];\n\nconst styles = (theme) => ({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white,\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\n    },\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white,\n  },\n  itemActiveItem: {\n    color: '#4fc3f7',\n  },\n  itemPrimary: {\n    fontSize: 'inherit',\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nfunction Navigator(props) {\n  const { classes, selectedRoute, history, ...other } = props;\n\n  \n\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\n          BookBnB\n        </ListItem>\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\n          <ListItemIcon className={classes.itemIcon}>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classes.itemPrimary,\n            }}\n          >\n            Project Overview\n          </ListItemText>\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <React.Fragment key={id}>\n            <ListItem className={classes.categoryHeader}>\n              <ListItemText\n                classes={{\n                  primary: classes.categoryHeaderPrimary,\n                }}\n              >\n                {id}\n              </ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, route }) => (\n              <ListItem\n                key={childId}\n                button\n                className={clsx(classes.item, route === selectedRoute && classes.itemActiveItem)}\n                onClick={() => history.push('/' + route)}\n              >\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\n                <ListItemText\n                  classes={{\n                    primary: classes.itemPrimary,\n                  }}\n                >\n                  {childId}\n                </ListItemText>\n              </ListItem>\n            ))}\n\n            <Divider className={classes.divider} />\n          </React.Fragment>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(Navigator));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst styles = (theme) => ({\n  secondaryBar: {\n    zIndex: 0,\n  },\n  menuButton: {\n    marginLeft: -theme.spacing(1),\n  },\n  iconButtonAvatar: {\n    padding: 4,\n  },\n  link: {\n    textDecoration: 'none',\n    color: lightColor,\n    '&:hover': {\n      color: theme.palette.common.white,\n    },\n  },\n  button: {\n    borderColor: lightColor,\n  },\n});\n\nfunction Header(props) {\n  const { classes, onDrawerToggle, header } = props;\n\n  return (\n    <React.Fragment>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n        <Toolbar>\n          <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item xs>\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\n                {header}\n              </Typography>\n            </Grid>            \n          </Grid>\n        </Toolbar>\n      </AppBar>      \n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Header);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Navigator from './Navigator';\nimport Header from './Header';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        BookBnB\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#63ccff',\n      main: '#009be5',\n      dark: '#006db3',\n    },\n  },\n  typography: {\n    h5: {\n      fontWeight: 500,\n      fontSize: 26,\n      letterSpacing: 0.5,\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  props: {\n    MuiTab: {\n      disableRipple: true,\n    },\n  },\n  mixins: {\n    toolbar: {\n      minHeight: 48,\n    },\n  },\n});\n\ntheme = {\n  ...theme,\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        backgroundColor: '#18202c',\n      },\n    },\n    MuiButton: {\n      label: {\n        textTransform: 'none',\n      },\n      contained: {\n        boxShadow: 'none',\n        '&:active': {\n          boxShadow: 'none',\n        },\n      },\n    },\n    MuiTabs: {\n      root: {\n        marginLeft: theme.spacing(1),\n      },\n      indicator: {\n        height: 3,\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        backgroundColor: theme.palette.common.white,\n      },\n    },\n    MuiTab: {\n      root: {\n        textTransform: 'none',\n        margin: '0 16px',\n        minWidth: 0,\n        padding: 0,\n        [theme.breakpoints.up('md')]: {\n          padding: 0,\n          minWidth: 0,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: theme.spacing(1),\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        borderRadius: 4,\n      },\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: '#404854',\n      },\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        color: 'inherit',\n        marginRight: 0,\n        '& svg': {\n          fontSize: 20,\n        },\n      },\n    },\n    MuiAvatar: {\n      root: {\n        width: 32,\n        height: 32,\n      },\n    },\n  },\n};\n\nconst drawerWidth = 256;\n\nconst styles = {\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  app: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  main: {\n    flex: 1,\n    padding: theme.spacing(6, 4),\n    background: '#eaeff1',\n  },\n  footer: {\n    padding: theme.spacing(2),\n    background: '#eaeff1',\n  },\n};\n\nfunction Paperbase(props) {\n  const { classes, selectedRoute, header } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <nav className={classes.drawer}>\n          <Hidden smUp implementation=\"js\">\n            <Navigator\n              PaperProps={{ style: { width: drawerWidth } }}\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              selectedRoute={selectedRoute}\n            />\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Navigator selectedRoute={selectedRoute} PaperProps={{ style: { width: drawerWidth } }} />\n          </Hidden>\n        </nav>\n        <div className={classes.app}>\n          <Header onDrawerToggle={handleDrawerToggle} header={header}/>\n          <main className={classes.main}>\n                {props.children}\n          </main>\n          <footer className={classes.footer}>\n            <Copyright />\n          </footer>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nPaperbase.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Paperbase);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {app} from \"../app/app\";\n\nconst styles = (theme) => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  }  \n}));\n\nfunction SignUp(props) {\n  const classes = useStyles();\n  const submitHandler = () => {\n    props.handleSubmit();\n  }\n\n  const changeHandler = (e) => {\n    props.handleInputChange(e);\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>        \n        <Typography component=\"h1\" variant=\"h5\">\n          User Creation Form\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"first_name\"\n                label=\"First Name\"\n                autoFocus\n                onChange={(e) => changeHandler(e)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"last_name\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"lname\"\n                onChange={(e) => changeHandler(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(e) => changeHandler(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"alias\"\n                label=\"User Name\"\n                name=\"alias\"\n                autoComplete=\"alias\"\n                onChange={(e) => changeHandler(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => changeHandler(e)}\n              />\n            </Grid>            \n            <Grid item xs={12} sm={5}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"national_id_type\"\n                label=\"Document Type\"\n                type=\"national_id_type\"\n                id=\"national_id_type\"\n                onChange={(e) => changeHandler(e)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={7}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"national_id\"\n                label=\"Document Number\"\n                type=\"national_id\"\n                id=\"national_id\"\n                onChange={(e) => changeHandler(e)}\n              />\n            </Grid>\n          </Grid>\n          {props.errorMessage && <Typography component=\"h1\" variant=\"h5\" style={{color: 'red'}}>\n            {props.errorMessage}\n          </Typography>}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={submitHandler}\n          >\n            Create User\n          </Button>\n        </form>\n      </div>      \n    </Container>\n  );\n}\n\nclass Register extends React.Component {    \n  constructor(props) {\n    super(props);\n\n    this.state = {\n        formData: {\n            email: '',\n            password: '',\n            first_name: '',\n            last_name: '',\n            national_id_type: '',\n            national_id: '',\n            alias: '',\n            profile: 0\n        },\n        errorMessage: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleApiResponse = this.handleApiResponse.bind(this);\n  }\n\n  initializeForm(){\n    this.setState({formData:{\n      email: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      national_id_type: '',\n      national_id: '',\n      alias: '',\n      profile: 0\n  } })\n  }\n\n  handleInputChange(event) {\n    const input = event.target;\n    let formData = this.state.formData;\n    formData[input.name] = input.value;\n    this.setState({formData: formData});\n}\n\nhandleApiResponse(response) {\n    if (response.hasError()) {\n        this.setState({errorMessage: response.errorMessages()});\n    } else {\n        alert(\"User Created Successfully\");        \n    }\n}\n\nhandleSubmit() {\n    app.apiClient().register(this.state.formData, this.handleApiResponse);\n}\n\n  render(){     \n      return <SignUp handleSubmit={this.handleSubmit} handleInputChange={this.handleInputChange} errorMessage={this.state.errorMessage}></SignUp>\n  }    \n}\n\nRegister.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Register);","import React, {Component} from 'react';\nimport logo from '../assets/img/logo.svg';\nimport \"../assets/css/Home.css\";\nimport Paperbase from \"../components/Paperbase\"\nimport Register from \"../components/Register\"\n\nexport class Home extends Component {\n    render() {\n        return (           \n            <Paperbase selectedRoute='home' header='User Management' ><Register></Register></Paperbase>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport logo from '../assets/img/logo.svg';\nimport \"../assets/css/Home.css\";\nimport Paperbase from \"../components/Paperbase\"\n\nexport class Other extends Component {\n    render() {\n        return (           \n            <Paperbase selectedRoute='other'><div>Coming soon...</div></Paperbase>\n        )\n    }\n}\n","import React, {Component} from \"react\";\n\nexport class Pepe extends Component {\n    render() {\n        console.log(\"renderizando\");\n        return (\n            <p>Nombre de pepe: {this.props.nombre}</p>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {app} from \"../app/app\";\nimport {Pepe} from \"../components/Pepe\";\n\n\nexport class Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userData: {}\n        };\n\n        this.handleApiResponse = this.handleApiResponse.bind(this);\n    }\n\n    componentDidMount() {\n        this.getUserData();\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Perfil del usuario</h2>\n                <p>Email: {this.state.userData.email}</p>\n                <p>Nombre: {this.state.userData.firstName}</p>\n                <p>Apellido: {this.state.userData.lastName}</p>\n                <Pepe key=\"pepe\" nombre=\"pepe\"/>\n            </div>\n        )\n    }\n\n    handleApiResponse(response) {\n        this.setState({userData: response.userPersonalData()})\n    }\n\n    getUserData() {\n        app.apiClient().getProfile(this.handleApiResponse);\n    }\n}\n","function getRequestOptions(method, headers, body, bearerToken){\n    let requestOptions = {\n        method: method,\n        headers: headers        \n      };\n  \n      if(bearerToken){\n        requestOptions.headers = { ...headers, 'Authorization': /* 'Bearer ' + */ bearerToken}\n      }\n      if(body){\n          requestOptions = {...requestOptions, body: JSON.stringify(body)}\n      }\n  \n      return requestOptions;\n  }\n  \nexport async function get(endpoint, bearerToken){\nlet headers = { 'Content-Type': 'application/json' }\nconst requestOptions = getRequestOptions('GET', headers, '', bearerToken);    \n\nlet response = await fetch(endpoint, requestOptions);\nreturn response;\n}\n\nexport async function put(endpoint, body = '', bearerToken){\nlet headers = { 'Content-Type': 'application/json' }\nconst requestOptions = getRequestOptions('PUT', headers, body, bearerToken);    \n\nlet response = await fetch(endpoint, requestOptions);\nreturn response;\n}\n\n  \nexport async function get_profile(endpoint, bearerToken){\n  let headers = { 'Content-Type': 'application/json', 'Token': bearerToken }\n  const requestOptions = getRequestOptions('GET', headers, '');    \n  \n  let response = await fetch(endpoint, requestOptions);\n  return response;\n  }\n\n\nexport async function put_profile(endpoint, body = '', bearerToken){\n  let headers = { 'Content-Type': 'application/json', 'Token': bearerToken }\n  const requestOptions = getRequestOptions('PUT', headers, body);    \n  \n  let response = await fetch(endpoint, requestOptions);\n  return response;\n  }\n\nexport async function post_profile(endpoint, body = '', bearerToken){\n  let headers = { 'Content-Type': 'application/json', 'Token': bearerToken }\n  const requestOptions = getRequestOptions('POST', headers, body);    \n  \n  let response = await fetch(endpoint, requestOptions);\n  return response;\n  }","export const userListEndpoint = \"https://taller2airbnb-businesscore.herokuapp.com/user\"\nexport const postingsEndpoint = \"https://taller2airbnb-businesscore.herokuapp.com/posting/admin\"\nexport const postingBlockEndpoint = \"https://taller2airbnb-businesscore.herokuapp.com/posting/blocked_status/\"\nexport const covidEndpoint = \"http://taller2airbnb-covidwarn.herokuapp.com/params/\"\nexport const apikeysEndpoint = \"https://taller2airbnb-profile.herokuapp.com/apikey/\"\nexport const transactionsEndpoint = \"http://taller2airbnb-businesscore.herokuapp.com/transactions\"\nexport const backofficeToken = '7objfFTJUoAcHoLGJ2VT2Q'\nexport const userToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImJ1ZW5vc2FpcmVzQGVsY29uZG9yLm1hcmRlbHBsYXRhIiwicHJvZmlsZSI6MCwiaWQiOjEsImlhdCI6MTYxNDgyMTAwNSwiZXhwIjoxNjE0OTA3NDA1fQ.Y6u6tUiqC9ckh94DdL871GxPVzRkbGzrkDMiuqa9C5Q'","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Cancel, CheckCircle } from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport {app} from \"../app/app\";\nimport {get, put} from \"../communication/Request\";\nimport {transactionsEndpoint, userToken} from \"../communication/endpoints/EndpointList\"\n\n\nconst styles = (theme) => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\n\nclass TransactionList extends React.Component {    \n  constructor(props) {\n    super(props);\n\n    this.state = {\n        loading: true,\n        status: null,\n        transactions: [],\n        errorMessage: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.loadTransactions();\n  }\n\n\n  async loadTransactions() {\n    const token = localStorage.getItem('token');\n    const endpoint = transactionsEndpoint;\n    const response = await get(endpoint, token);\n    this.setState({ status: response.status, loading: false});\n    if (response.status == 200){\n      let json = await response.json();\n      let transactionList = json.message;\n      transactionList.sort((a,b) => (a.creation_date > b.creation_date) ? 1: -1)\n      this.setState({transactions: transactionList});\n    }\n  }\n\n  listATransaction(transaction){\n    return (\n      <TableRow key={transaction.name}>\n        <TableCell align=\"left\" style={{fontWeight: 'bold'}}>{transaction.name_posting}</TableCell>\n        <TableCell align=\"center\">{transaction.first_name_booker} {transaction.last_name_booker}</TableCell>\n        <TableCell align=\"center\">{transaction.first_name_owner} {transaction.last_name_owner}</TableCell>\n        <TableCell align=\"left\">{transaction.operation}</TableCell>\n        <TableCell align=\"center\">{transaction.payment}</TableCell>\n        <TableCell align=\"center\">{this.formatDateAndTime(transaction.creation_date)}</TableCell>\n      </TableRow>\n    );\n  }\n\n  formatDateAndTime(date_string){\n    let date = this.splitDate(date_string)\n    return date.day + '/' + date.month + '/' + date.year + ' - ' + date.time\n  }\n\n  splitDate(date_string){\n    let date = {}\n    date.year = date_string.substring(0,4)\n    date.month = date_string.substring(5,7)\n    date.day = date_string.substring(8,10)\n    date.time = date_string.substring(11,19)\n    return date\n  }\n\n  render(){\n\n    if (this.state.loading) {\n      return <div>Loading...</div>;\n    }\n\n    if (this.state.transactions.length > 0){\n      return (\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Posting Name</TableCell>\n                <TableCell align=\"center\">Booker</TableCell>\n                <TableCell align=\"center\">Owner</TableCell>\n                <TableCell align=\"center\">Operation</TableCell>\n                <TableCell align=\"center\">Amount</TableCell>\n                <TableCell align=\"center\">Date</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.transactions.map(this.listATransaction, this)}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n\n    return (\n      <div>\n        <div>Status: {this.state.status}</div>\n      </div>\n    );\n  }\n}\n\nTransactionList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TransactionList);","import React, {Component} from 'react';\nimport \"../assets/css/Home.css\";\nimport Paperbase from \"../components/Paperbase\"\nimport TransactionList from \"../components/Transactions\"\n\nexport class Transactions extends Component {\n    render() {\n        return (\n            <Paperbase selectedRoute='transactions' header='Transaction List' ><TransactionList></TransactionList></Paperbase>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {app} from \"../app/app\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        BookBnB\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignIn(props) {\n  const classes = useStyles();\n\n  const submitHandler = () => {\n    props.handleSubmit();\n  }\n\n  const changeHandler = (e) => {\n    props.handleInputChange(e);\n  }\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={changeHandler}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => changeHandler(e)}\n          />\n          {props.errorMessage && <Typography component=\"h1\" variant=\"h5\" style={{color: 'red'}}>\n            {props.errorMessage}\n          </Typography>}\n          <Button\n            fullWidth\n            type=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={submitHandler}\n          >\n            Sign In\n          </Button>\n          <Grid container>            \n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            formData: {\n                email: '',\n                password: '',\n                google_token: '',\n                user_type: 'admin',\n            },\n            errorMessage: ''\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleApiResponse = this.handleApiResponse.bind(this);\n    }\n\n    render() {\n        return (\n            <SignIn handleSubmit={this.handleSubmit} handleInputChange={this.handleInputChange} errorMessage={this.state.errorMessage}></SignIn>\n        )\n    }\n\n    handleInputChange(event) {\n        const input = event.target;\n        let formData = this.state.formData;\n        formData[input.name] = input.value;\n        this.setState({formData: formData});\n    }\n\n    handleApiResponse(response) {\n        if (response.hasError()) {\n            this.setState({errorMessage: response.errorMessages()});\n        } else {\n            app.loginUser(response.content().token);\n            this.props.history.push(app.routes().home);\n        }\n    }\n\n    handleSubmit() {\n        app.apiClient().login(this.state.formData, this.handleApiResponse);\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Cancel, CheckCircle } from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport {app} from \"../app/app\";\nimport {get, put} from \"../communication/Request\";\nimport {userListEndpoint, userToken} from \"../communication/endpoints/EndpointList\"\n\n\nconst styles = (theme) => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\n\nclass UserList extends React.Component {    \n  constructor(props) {\n    super(props);\n\n    this.state = {\n        loading: true,\n        status: null,\n        name: '',\n        user_list: [],\n        errorMessage: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.reloadUserList()\n  }\n\n  async reloadUserList() {\n    const token = localStorage.getItem('token');\n    const endpoint = userListEndpoint;\n    const response = await get(endpoint, token);\n    this.setState({ status: response.status, loading: false});\n    if (response.status == 200){\n      let json = await response.json();\n      let myList = json.message.users\n      myList.sort((a,b) => (a.id > b.id) ? 1: -1)\n      this.setState({ user_list: json.message.users});\n    }\n  }\n\n\n  listAUser(user){\n    let blockText = 'Block';\n    let blockIcon = <Cancel />\n    let blockColor = 'secondary'\n    if (user.blocked){\n      blockText = 'Unblock';\n      blockIcon = <CheckCircle />\n      blockColor = 'primary'\n    }\n    return (\n      <TableRow key={user.name}>\n        <TableCell align=\"left\" style={{fontWeight: 'bold'}}>{user.first_name} {user.last_name}</TableCell>\n        <TableCell align=\"left\">{user.alias}</TableCell>\n        <TableCell align=\"left\">{user.email}</TableCell>\n        <TableCell align=\"left\">{user.national_id_type} {user.national_id}</TableCell>\n        <TableCell align=\"center\">{user.id}</TableCell>\n        <TableCell align=\"center\">{blockIcon}</TableCell>\n        <TableCell align=\"center\">\n          <Button style={{ marginLeft: '2rem', marginBottom: '1.2rem' }}\n              type=\"button\"\n              variant=\"contained\"\n              color={blockColor}\n              onClick={() => this.setBlockStatus(user.id, !user.blocked)}>\n              {blockText}\n          </Button>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  async setBlockStatus(user_id, new_status) {\n    const token = localStorage.getItem('token');\n    const body = {\"new_status\": new_status}\n    const endpoint = userListEndpoint + \"/\" + user_id + \"/blocked_status\";\n    let response = await put(endpoint, body, token)\n    this.setState({loading: true})\n    this.reloadUserList()\n  }\n\n  render(){\n\n    if (this.state.loading) {\n      return <div>Loading...</div>;\n    }\n\n    if (this.state.user_list.length > 0){\n      return (\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Name</TableCell>\n                <TableCell align=\"center\">Alias</TableCell>\n                <TableCell align=\"center\">Mail</TableCell>\n                <TableCell align=\"center\">Id</TableCell>\n                <TableCell align=\"center\">Key</TableCell>\n                <TableCell align=\"center\">Blocked?</TableCell>\n                <TableCell align=\"center\"></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.user_list.map(this.listAUser, this)}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      );\n    }\n\n    return (\n      <div>\n        <div>Status: {this.state.status}</div>\n        <div>{this.state.name}</div>\n        <div>{localStorage.getItem(\"token\")}</div>\n      </div>\n    );\n  }\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(UserList);","import React, {Component} from 'react';\nimport \"../assets/css/Home.css\";\nimport Paperbase from \"../components/Paperbase\"\nimport UserList from \"../components/UserList\"\n\nexport class Users extends Component {\n    render() {\n        return (\n            <Paperbase selectedRoute='home' header='User List' ><UserList></UserList></Paperbase>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class HealthTest extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            status: ''\n        }       \n        this.getStatus.bind(this);\n    }\n\n    async componentDidMount() {\n        this.getStatus();\n        setInterval(this.getStatus, 15000);                \n    }\n\n    getStatus = () =>{\n        fetch(this.props.healthTestUrl)\n        .then(response => response.json())\n        .then(data => this.setState({ status: data.status, loading: false }));  \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n          \n    }        \n\n    render() {        \n        return <div>\n                {this.state.loading && <p>Checking server status for {this.props.serverName}</p>}\n                {!this.state.loading && <p>{this.props.serverName} status: {this.state.status}</p>}\n                </div>\n    }\n\n    \n}\n\n","import React from 'react';\nimport '../App.css';\nimport HealthTest from '../components/HealthTest'\n\nexport default class HealthCheck extends React.Component {   \n\n    render() {        \n        return <div className=\"App\">\n        <header className=\"App-header\">        \n          <HealthTest serverName='Profile Server' healthTestUrl={'https://taller2airbnb-profile.herokuapp.com/health'}/>\n          <HealthTest serverName='Business Core' healthTestUrl={'https://taller2airbnb-businesscore.herokuapp.com/health'}/>\n        </header>      \n      </div>\n    }    \n}\n","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport {app} from \"../app/app\";\n\nexport const PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest}\n               render={props => app.thereIsLoggedInUser() ?\n                   <Component {...props}/> :\n                   <Redirect to={{pathname: app.routes().login}}/>\n               }\n        />\n    );\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Cancel, CheckCircle } from '@material-ui/icons';\nimport {app} from \"../app/app\";\nimport {get, put} from \"../communication/Request\";\nimport {postingsEndpoint, userListEndpoint, postingBlockEndpoint, userToken} from \"../communication/endpoints/EndpointList\";\n\n\nconst styles = (theme) => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\n\nclass PostingsList extends React.Component {    \n  constructor(props) {\n    super(props);\n\n    this.state = {\n        loading: true,\n        status: null,\n        name: '',\n        postings_list: [],\n        user_list: [],\n        errorMessage: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.reloadPostingsList()\n    this.reloadUserList()\n  }\n\n  async reloadPostingsList() {\n    const token = localStorage.getItem('token');\n    const endpoint = postingsEndpoint;\n    const response = await get(endpoint, token);\n    this.setState({ status: response.status, loading: false});\n    if (response.status == 200){\n      let json = await response.json();\n      let myList = json.message\n      myList.sort((a,b) => (a.id_posting > b.id_posting) ? 1: -1)\n      this.setState({ postings_list: myList});\n    }\n  }\n\n  async reloadUserList() {\n    const token = localStorage.getItem('token');\n    const endpoint = userListEndpoint;\n    const response = await get(endpoint, token);\n    this.setState({ status: response.status, loading: false});\n    if (response.status == 200){\n      let json = await response.json();\n      let myList = json.message.users\n      myList.sort((a,b) => (a.id > b.id) ? 1: -1)\n      this.setState({ user_list: json.message.users});\n    }\n  }\n\n  postingDisplay(posting){\n    let blockText = 'Block';\n    let blockIcon = <Cancel />\n    let blockColor = 'secondary'\n    if (posting.blocked){\n      blockText = 'Unblock';\n      blockIcon = <CheckCircle />\n      blockColor = 'primary'\n    }\n    let publicIcon = <Cancel />\n    if (posting.public){\n      publicIcon = <CheckCircle />\n    }\n    let deleteState = 'not deleted';\n    if (posting.deleted){\n      deleteState = 'deleted'\n    }\n    let location = 'Not specified.'\n    if (posting.location){\n      location = '(' + posting.location.x + ',' + posting.location.y + ')'\n    }\n    return (\n      <TableRow key={posting.name}>\n        <TableCell align=\"left\" style={{fontWeight: 'bold'}}>{posting.name}</TableCell>\n        <TableCell align=\"left\">{posting.content}</TableCell>\n        <TableCell align=\"left\">{this.getUserName(posting.id_user)}</TableCell>\n        <TableCell align=\"left\">{this.formatDateAndTime(posting.creation_date)}</TableCell>\n        <TableCell align=\"left\">{this.formatDate(posting.start_date)} ~ {this.formatDate(posting.end_date)}</TableCell>\n        <TableCell align=\"left\">{posting.city}, {posting.country}</TableCell>\n        <TableCell align=\"left\">{location}</TableCell>\n        <TableCell align=\"center\">{posting.max_number_guests}</TableCell>\n        <TableCell align=\"center\">{posting.price_day}</TableCell>\n        <TableCell align=\"center\">{publicIcon}</TableCell>\n        <TableCell align=\"center\">{blockIcon}</TableCell>\n        <TableCell align=\"center\">\n          <Button\n              type=\"button\"\n              variant=\"contained\"\n              color={blockColor}\n              onClick={() => this.setBlockState(posting.id_posting, !posting.blocked)}>\n              {blockText}\n          </Button>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  getUserName(user_id){\n    let users = this.state.user_list.filter( function (user) { return user.id == user_id})\n    if (users.length > 0) {\n      let user = users[0]\n      return user.first_name + ' ' + user.last_name\n    }\n    else{\n      return 'unknown'\n    }\n  }\n\n  splitDate(date_string){\n    let date = {}\n    date.year = date_string.substring(0,4)\n    date.month = date_string.substring(5,7)\n    date.day = date_string.substring(8,10)\n    date.time = date_string.substring(11,19)\n    return date\n  }\n\n  formatDate(date_string){\n    let date = this.splitDate(date_string)\n    return date.day + '/' + date.month + '/' + date.year\n  }\n\n  formatDateAndTime(date_string){\n    let date = this.splitDate(date_string)\n    return date.day + '/' + date.month + '/' + date.year + ' - ' + date.time\n  }\n\n  async setBlockState(posting_id, value) {\n    const token = localStorage.getItem('token');\n    const body = {\"blocked\": value}\n    const endpoint = postingBlockEndpoint + posting_id;\n    let response = await put(endpoint, body, token)\n    this.setState({loading: true})\n    this.reloadPostingsList()\n  }\n\n\n  render(){\n\n    if (this.state.loading) {\n      return <div>Loading...</div>;\n    }\n\n    if (this.state.postings_list.length > 0){\n      return (\n        <TableContainer component={Paper}>\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Content</TableCell>\n              <TableCell align=\"center\">Owner</TableCell>\n              <TableCell align=\"center\">Creation</TableCell>\n              <TableCell align=\"center\">Duration</TableCell>\n              <TableCell align=\"center\">Location</TableCell>\n              <TableCell align=\"center\">Coordinates</TableCell>\n              <TableCell align=\"center\">Guests</TableCell>\n              <TableCell align=\"center\">PPD</TableCell>\n              <TableCell align=\"center\">Public?</TableCell>\n              <TableCell align=\"center\">Blocked?</TableCell>\n              <TableCell align=\"center\"></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.postings_list.map(this.postingDisplay, this)}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      );\n    }\n\n    return (\n      <div>\n        <div>Status: {this.state.status}</div>\n        <div>{this.state.name}</div>\n        <div>{localStorage.getItem(\"token\")}</div>\n      </div>\n    );\n  }\n}\n\nPostingsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PostingsList)","import React, {Component} from 'react';\nimport \"../assets/css/Home.css\";\nimport Paperbase from \"../components/Paperbase\"\nimport PostingsList from \"../components/Postings\"\n\nexport class Postings extends Component {\n    render() {\n        return (\n            <Paperbase selectedRoute='posting' header='Postings' ><PostingsList></PostingsList></Paperbase>\n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Cancel, CheckCircle } from '@material-ui/icons';\nimport {app} from \"../app/app\";\nimport {get_profile, put_profile, post_profile} from \"../communication/Request\";\nimport {backofficeToken, apikeysEndpoint} from \"../communication/endpoints/EndpointList\";\n\n\nconst styles = (theme) => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\n\nclass ServerList extends React.Component {    \n  constructor(props) {\n    super(props);\n\n    this.state = {\n        loading: true,\n        create: true,\n        status: null,\n        name: '',\n        api_keys: [],\n        new_key_name: '',\n        errorMessage: ''\n    };\n    this.onInputchange = this.onInputchange.bind(this);\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n  }\n\n  onSubmitForm() {\n    this.addApiKey(this.state.new_key_name)\n  }\n\n  onInputchange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async componentDidMount() {\n    this.reloadApiKeys()\n  }\n\n  async reloadApiKeys() {\n    const token = backofficeToken;\n    const endpoint = apikeysEndpoint;\n    const response = await get_profile(endpoint, token);\n    this.setState({ status: response.status, loading: false});\n    if (response.status == 200){\n      let json = await response.json();\n      let myList = json.apikeys\n      myList.sort((a,b) => (a.id > b.id) ? 1: -1)\n      this.setState({ api_keys: myList});\n    }\n    this.setState({create: true})\n  }\n\n  apiKeysDisplay(api_key){\n    let blockText = 'Block';\n    let activeIcon = <CheckCircle />\n    let blockColor = 'secondary'\n    if (!api_key.active){\n      blockText = 'Unblock';\n      activeIcon = <Cancel />\n      blockColor = 'primary'\n    }\n    return (\n      <TableRow key={api_key.name_from}>\n        <TableCell align=\"left\" style={{fontWeight: 'bold'}}>{api_key.name_from}</TableCell>\n        <TableCell align=\"center\">{api_key.id}</TableCell>\n        <TableCell align=\"center\">{api_key.api_key_token}</TableCell>\n        <TableCell align=\"center\">{activeIcon}</TableCell>\n        <TableCell align=\"center\">\n          <Button\n              type=\"button\"\n              variant=\"contained\"\n              color={blockColor}\n              onClick={() => this.setActiveState(api_key.id, !api_key.active)}>\n              {blockText}\n          </Button>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  async setActiveState(id, value) {\n    const token = backofficeToken;\n    const body = {\"active\": value}\n    const endpoint = apikeysEndpoint + id + '/active_status';\n    let response = await put_profile(endpoint, body, token)\n    this.setState({loading: true})\n    this.reloadApiKeys()\n  }\n\n  serverTable(){\n      return (\n        <TableContainer component={Paper}>\n            <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n                <TableRow>\n                <TableCell align=\"center\">Name</TableCell>\n                <TableCell align=\"center\">Id</TableCell>\n                <TableCell align=\"center\">API key token</TableCell>\n                <TableCell align=\"center\">Active?</TableCell>\n                <TableCell align=\"center\"></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {this.state.api_keys.map(this.apiKeysDisplay, this)}\n            </TableBody>\n            </Table>\n        </TableContainer>\n      )\n  }\n\n  async addApiKey(name){\n    const token = backofficeToken;\n    const body = {\"name_from\": name}\n    const endpoint = apikeysEndpoint + 'add/';\n    let response = await post_profile(endpoint, body, token)\n    this.setState({new_key_name: ''})\n    this.setState({loading: true})\n    this.reloadApiKeys()\n  }\n\n  createServerForm(){\n    if (this.state.create){\n        return(\n            <div align='center'  style={{marginTop: '2rem' }}>\n                <Button\n                type=\"button\"\n                variant=\"contained\"\n                color='primary'\n                onClick={() => this.setState({create: false})}>\n                    Add server\n                </Button>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div align='center'  style={{marginTop: '2rem' }}>\n                Name: \n                <input style={{marginLeft: '2rem' }} name =\"new_key_name\" type=\"text\" onChange={ this.onInputchange} value={ this.state.new_key_name } />\n                <Button\n                style={{marginLeft: '2rem' }}\n                disabled={this.state.new_key_name==''}\n                type=\"button\"\n                variant=\"contained\"\n                color='primary'\n                onClick={this.onSubmitForm}>\n                    Create\n                </Button>\n            </div>\n        )\n    }\n  }\n\n  render(){\n\n    if (this.state.loading) {\n      return <div>Loading...</div>;\n    }\n\n    if (this.state.api_keys.length > 0){\n        return (\n            <div>\n                {this.serverTable()}\n                {this.createServerForm()}\n            </div>      \n        );\n    }\n\n    return (\n      <div>\n        <div>Status: {this.state.status}</div>\n        <div>{this.state.name}</div>\n        <div>{localStorage.getItem(\"token\")}</div>\n      </div>\n    );\n  }\n}\n\nServerList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ServerList)","import React, {Component} from 'react';\nimport \"../assets/css/Home.css\";\nimport Paperbase from \"../components/Paperbase\"\nimport ServerList from \"../components/Servers\"\n\nexport class Servers extends Component {\n    render() {\n        return (\n            <Paperbase selectedRoute='servers' header='Servers' ><ServerList></ServerList></Paperbase>\n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport {get, put} from \"../communication/Request\";\nimport {covidEndpoint} from \"../communication/endpoints/EndpointList\";\n\n\nconst styles = (theme) => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\n\nfunction isNumeric(str) {\n    if (typeof str != \"string\") return false // we only process strings!  \n    return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n           !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\n}\n\nclass CovidSettings extends React.Component {    \n  constructor(props) {\n    super(props);\n\n    this.state = {\n        loading: true,\n        status: null,\n        allow: false,\n        covidParams: {},\n        errorMessage: '',\n    };\n    this.onInputchange = this.onInputchange.bind(this);\n  }\n\n  onInputchange(event) {\n    this.updateParam([event.target.name], event.target.value)\n    this.setState({allow: !this.validateForm()})\n  }\n\n  updateParam(param_name, value){\n    let newParams = this.state.covidParams\n    newParams[param_name] = value\n    this.setState({covidParams: newParams})\n  }\n\n  validateForm(){\n    let check = true\n    for (var key in this.state.covidParams) {\n        if (isNumeric(this.state.covidParams[key])){\n            check = false\n        }\n      }\n    return (check);\n  }\n\n  generatePutBody(){\n    let body = this.state.covidParams\n    for (var key in body) {\n        body[key] = Number(body[key])\n      }\n    return(body)\n  }\n\n  async componentDidMount() {\n    this.reloadCovidParams()\n  }\n\n  async reloadCovidParams() {\n      const endpoint = covidEndpoint;\n      const response = await get(endpoint);\n      this.setState({ status: response.status, loading: false});\n      if (response.status == 200){\n        let json = await response.json();\n        this.setState({ covidParams: json });\n      }\n  }\n\n  paramsToList(paramDict) {\n    let displayNames = {\n        fatality_rate: 'Fatality Rate',\n        fatality_rate_variation: 'Fatality Rate Variation',\n        jump_days: 'Jump Days',\n        number_days_window_delta: 'Number Days Window Delta',\n        threshold_slope_variation: 'Threshold Slope Variation',\n        total_jumps: 'Total Jumps',\n    }\n    let myList = []\n    for (var key in paramDict) {\n        myList = myList.concat({name: key, display_name: displayNames[key], value: paramDict[key]})\n      }\n    return (myList)\n  }\n\n  paramDisplay(param){\n    return (\n      <TableRow>\n        <TableCell style={{fontWeight: 'bold'}}>{param.display_name}</TableCell>\n        <TableCell align=\"center\">\n            <input\n            name = {param.name}\n            type=\"text\" onChange={ this.onInputchange} \n            value={this.state.covidParams[param.name]}\n            />\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  async setCovidParams(){\n    const body = this.generatePutBody()\n    const endpoint = covidEndpoint\n    let response = await put(endpoint, body)\n    this.setState({loading: true, allow: false})\n    this.reloadCovidParams()\n  }\n\n  paramTable(){\n      return (\n        <TableContainer style={{ width: 600 }} component={Paper}>\n            <Table  aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Parameter</TableCell>\n                        <TableCell align=\"center\">Value</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                        {this.paramsToList(this.state.covidParams).map(this.paramDisplay, this)}\n                </TableBody>\n            </Table>\n        </TableContainer>\n      )\n  }\n\n\n  submitButton(){\n    return(\n        <div align='center'  style={{marginTop: '2rem' }}>\n            <Button\n            disabled={!this.state.allow}\n            type=\"button\"\n            variant=\"contained\"\n            color='primary'\n            onClick={() => this.setCovidParams()}>\n                Set new values\n            </Button>\n        </div>\n    )\n  }\n\n  render(){\n\n    if (this.state.loading) {\n      return <div>Loading...</div>;\n    }\n\n    if (this.state.covidParams != {}){\n        return(\n            <div align=\"center\">\n                {this.paramTable()}\n                {this.submitButton()}\n            </div>\n        )\n    }\n\n    return (\n      <div>\n        <div>Status: {this.state.status}</div>\n      </div>\n    );\n  }\n}\n\nCovidSettings.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CovidSettings)","import React, {Component} from 'react';\nimport \"../assets/css/Home.css\";\nimport Paperbase from \"../components/Paperbase\"\nimport CovidSettings from \"../components/Covid\"\n\nexport class Covid extends Component {\n    render() {\n        return (\n            <Paperbase selectedRoute='covid' header='Covid Settings' ><CovidSettings></CovidSettings></Paperbase>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\nimport {app} from \"../app/app\";\nimport {Home} from \"../controllers/Home\";\nimport {Other} from \"../controllers/Other\"\nimport {Profile} from \"../controllers/Profile\";\nimport {Transactions} from \"../controllers/Transactions\";\nimport {Login} from \"../controllers/Login\";\nimport {Users} from \"../controllers/Users\";\nimport HealthCheck from \"../controllers/HealthCheck\";\nimport {PrivateRoute} from \"./PrivateRoute\";\nimport {Postings} from \"../controllers/Postings\";\nimport {Servers} from \"../controllers/Servers\";\nimport {Covid} from \"../controllers/Covid\";\n\nclass Routes extends Component {\n    render() {\n        return (\n            <Router key=\"router\">\n                <Route exact path={app.routes().login} render={props => localStorage.getItem(\"token\") ?\n                    <Redirect to={{pathname: app.routes().home}}/> :\n                    <Login {...props}/>\n                }/>\n                <Route exact path={app.routes().healthcheck} component={HealthCheck}/>\n                <PrivateRoute exact path={app.routes().home} component={Home}/>\n                <PrivateRoute exact path={app.routes().profile} component={Profile}/>\n                <PrivateRoute exact path={app.routes().transactions} component={Transactions}/>\n                <PrivateRoute exact path={app.routes().other} component={Other}/>\n                <PrivateRoute exact path={app.routes().userlist} component={Users}/>\n                <PrivateRoute exact path={app.routes().postings} component={Postings}/>\n                <PrivateRoute exact path={app.routes().servers} component={Servers}/>\n                <PrivateRoute exact path={app.routes().covid} component={Covid}/>\n            </Router>\n        )\n    }\n\n\n}\n\nexport default Routes;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './routes/Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}